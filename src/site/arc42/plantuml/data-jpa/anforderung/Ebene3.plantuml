@startuml Ebene3.png
hide empty members

package repository {
    interface ProjektRepository
    interface LogoRepository
    interface DRDRepository

}
package anforderung {
    interface AnforderungServiceRepository {
        getAnforderung(projekt : String, tailoring : String, kapitel : String, position : String) : Optional<TailoringAnforderung>
        getKapitel(projekt : String, tailoring : String, kapitel : String) : Optional<AnforderungsGruppe<TailoringAnforderung>>
        updateAnforderung(projekt : String, tailoring : String, anforderung : TailoringAnforderung) : Optional<TailoringAnforderung>
        updateAusgewaehlt(projekt : String, tailoring : String, gruppe : Optional<AnforderungsGruppe<TailoringAnforderung>) : Optional<AnforderungsGruppe<TailoringAnforderung>>
        updateKapitel(projekt : String, tailoring : String, gruppe : AnforderungsGruppe<TailoringAnforderung>) : Optional<AnforderungsGruppe<TailoringAnforderung>>
    }

    abstract class JPAAnforderungServiceRepositoryMapper {
        {abstract} toDomain(entity : ProjektPhaseAnforderungEntity) : ProjektPhaseAnforderung
        {abstract} updateAnforderung(domain : ProjektPhaseAnforderung, entity : ProjektPhaseAnforderungEntity) : void
        {abstract} toDomain(entity : ProjektPhaseAnforderungGruppeEntity) : AnforderungsGruppe<ProjektPhaseAnforderung>
        {abstract} updateKapitel(domain : AnforderungsGruppe<ProjektPhaseAnforderung>, entity : ProjektPhaseAnforderungGruppeEntity) : void
        resolve(domain : Logo) : LogoEntity
    }
    JPAAnforderungServiceRepositoryMapper --> "1" logoRepository : repository
    DRDRepository --> "1" LogoRepository : drdRepository

    class JPAAnforderungServiceRepository {
    }

    AnforderungServiceRepository <|.. JPAAnforderungServiceRepository
    JPAAnforderungServiceRepository --> "1" JPAAnforderungServiceRepositoryMapper : mapper
    JPAAnforderungServiceRepository --> "1" ProjektRepository : projektRepository
}

@enduml