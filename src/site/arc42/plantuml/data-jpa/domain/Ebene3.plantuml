@startuml db.png
skinparam componentStyle uml2
'skinparam linetype ortho

package domain {

    enum DataType {
        SKALAR
        MATRIX
    }

    class ParameterEntity {
        id : Long <<PK>>
        parameterType : String
        category : String
        name : String
        label : String
        value : String
        position : int
    }
    ParameterEntity --> "1" DataType : dataType

    class Phase {
    }


    enum TailoringState {
        CREATED
        ACTIVE
    }

    class DRDEntity {
        id : Long <<PK>>
        number : String
        title : String
        subtitle : String
        deliveryDate : String
        action : String
    }

    class LogoEntity {
        id : Long <<PK>>
        name : String
        url : String
    }

    class ReferenceEntity <<Embeddable>>{
        text : String
        issue : String
        releaseDate : String
        changed : Boolean
    }
    ReferenceEntity --> "0..1" LogoEntity : logo

    class IdentifierEntity {
        id : Long <<PK>
        type : String
        level : int
        limitations : Set<String>
    }

    class BaseRequirementEntity {
        id : Long <<PK>>
        text : String
        postion : String
        number: String
    }
    BaseRequirementEntity --> "0..1" ReferenceEntity : reference
    BaseRequirementEntity --> "0..*" Phase : phases <<ordered>>
    BaseRequirementEntity --> "0..*" IdentifierEntity : identifiers <<unordered>>
    BaseRequirementEntity --> "0..*" DRDEntity : drds <<unordered>>

    class BaseCatalogChapterEntity {
        id : Long <<PK>>
        name : String
        position : int
        number : String
    }
    BaseCatalogChapterEntity --> "0..*" BaseCatalogChapterEntity : chapter <<ordered>>
    BaseCatalogChapterEntity --> "0..*" BaseRequirementEntity : requirements <<ordered>>

    class BaseCatalogEntity {
        id : Long <<PK>>
        version : String
        validFrom : ZonedDateTime
        validUntil : ZonedDateTime
    }
    BaseCatalogEntity --> "1" BaseCatalogChapterEntity : toc

    enum Phase {
        NULL("0")
        A("A")
        B("B")
        C("C")
        D("D")
        E("E")
        F("F")
    }

    class SelectionVectorEntity {
        id : Long <<PK>>
        levels : Map<String, Integer>
    }

    class SelectionVectorProfileEntity {
        id : Long <<PK>>
        name : String
        internalKey : String <<unique>>
        levels : Map<String, Integer>
    }

    class ScreeningSheetParameterEntity {
        id: Long <<PK>>
        designation : String
        value: Object
    }

    class ScreeningSheetEntity {
        id: Long <<PK>>
        data : byte[]
    }
    ScreeningSheetEntity --> "1..*" ScreeningSheetParameterEntity : parameters
    ScreeningSheetEntity --> "1" SelectionVectorEntity : selectionVector

    class TailoringRequirementEntity {
        id : Long <<PK>>
        text : String
        position : String
        selected : Boolean
        selectionChanged : ZonedDateTime
        textChanged : ZonedDateTime
        number: String
    }
    TailoringRequirementEntity --> "0..1" ReferenceEntity : reference
    TailoringRequirementEntity --> "0..*" DRDEntity : drds <<unordered>>

    class TailoringCatalogChapterEntity {
        id : Long <<PK>>
        name : String
        position : int
        chapter : String
        getChapter(chapter : String) : Optional<TailoringCatalogChapterEntity>
    }
    TailoringCatalogChapterEntity --> "0..*" TailoringCatalogChapterEntity : chapters <<ordered>>
    TailoringCatalogChapterEntity --> "0..*" TailoringRequirementEntity : requirements <<ordered>>

    enum DocumentSignatureType {
        PREPARED("Prepared")
        AGREED("Agreed")
        RELEASED("Released")
    }

    class DocumentEntity {
        id : Long <<PK>>
        name : String
        data : byte []
        hash : String
    }

    class DocumentSignatureEntity {
        faculty : String
        signee : String
        applicable : Boolean
        position : int
    }
    DocumentSignatureEntity --> "1" DocumentSignatureType : type

    class DocumentSigneeEntity {
        id : Long <<PK>>
        faculty : String
        signee : String
        position : int

    }
    DocumentSigneeEntity --> "1" DocumentSignatureType : type

    class NoteEntity {
        id : Long <<Pk>>
        number : Integer
        text : String
        creationTimestamp : ZonedDateTime
    }

    class TailoringEntity {
        id : Long <<Pk>>
        identifier : String
        name : String
        creationTimestamp : ZonedDateTime
    }
    TailoringEntity --> "1" SelectionVectorEntity : selectionVector
    TailoringEntity --> "1" BaseCatalogEntity : baseCatalog
    TailoringEntity --> "1" ScreeningSheetEntity : screeningSheet
    TailoringEntity --> "1..*" Phase : phases
    TailoringEntity --> "1" TailoringCatalogEntity : catalogue
    TailoringEntity --> "1" TailoringState : state
    TailoringEntity --> "1..*" DocumentSignatureEntity : signatures
    TailoringEntity --> "0..*" DocumentEntity : documents
    TailoringEntity --> "0..*" NoteEntity : notes

    class TailoringCatalogEntity {
        id : Long <<PK>>
        version : String
    }
    TailoringCatalogEntity --> "1" TailoringCatalogChapterEntity : toc

    class ProjectEntity {
        id : Long <<PK>>
        identifier : String <<unique>>
        creationTimestamp : ZonedDateTime
        getTailoring(name : String) : Optional<TailoringEntity>
    }
    ProjectEntity --> "1" BaseCatalogEntity : catalogue
    ProjectEntity --> "1" ScreeningSheetEntity : screeningSheet
    ProjectEntity --> "1..*" TailoringEntity : tailorings
    ProjectEntity --> "1" ProjectState : state

    interface CatalogVersion<<Projection>> {
        getVersion() : String
        getValidFrom() : ZonedDateTime
        getValidUntil() : ZonedDateTime
    }

    interface AttributeConverter<E, D>

    class ScreeningSheetParameterValueAttributeConverter<Object, String> {
    }
    AttributeConverter <|-- ScreeningSheetParameterValueAttributeConverter

    class ZonedDateTimeAttributeConverter<ZonedDateTime, String> {
    }
    AttributeConverter <|-- ZonedDateTimeAttributeConverter

}

hide empty members
@enduml
