@startuml Ebene3.png
hide empty members

package tailoring {

    interface DocumentService {
        createRequirementDocument(tailoring : Tailoring, creationTimestamp : LocalDateTime): Optional<File>
        createComparisonDocument(tailoring : Tailoring, creationTimestamp : LocalDateTime): Optional<File>
        createAll(tailoring : Tailoring, creationTimestamp : LocalDateTime): Optional<File>
    }

    class TenantDocumentService {
        tenantService : Map<String, DocumentService>
    }
    DocumentService <|.. TenantDocumentService

    class TenantTailoringDeletablePredicate {
        tenantPredicate : Map<String, TenantTailoringDeletablePredicate>
    }
    TailoringDeletablePredicate <|.. TenantTailoringDeletablePredicate
    TenantTailoringDeletablePredicate --> "1" DefaultTailoringDeletablePredicate : defaultPredicate

    interface AttachmentService {
        load(project : String, tailoring : String, filename: String) :  Optional<File>
        list(project : String, tailoring : String) : Collection<File>
        save(project : String, tailoring : String, file : File) : Optional<File>
        delete(project : String, tailoring : String, filename: String) : boolean
    }

    interface "BiFunction<T, U, R>" as biFunction
    class "TenantTailoringPathProvider<String, String, Path>" as tenantTailoringPathProvider{
    }
    biFunction <|.. TenantTailoringPathProvider


    class TenantAttachmentService {
    }
    AttachmentService <|.. TenantAttachmentService
    TenantAttachmentService --> "1" TenantTailoringPathProvider : pathProvider

}
@enduml
