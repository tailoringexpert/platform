@startuml Ebene3.png
hide empty members

package catalog {

    interface DocumentCreator {
        createDocument(docId : String, catalog : Catalog<BaseRequirement>, placeholders : Map<String, Object>) : File
    }

    interface DocumentService {
        createCatalog(catalog : Catalog<BaseRequirement>, creationTimestamp : LocalDateTime) : Optional<File>
        createCatalogExcel(catalog : Catalog<BaseRequirement>, creationTimestamp : LocalDateTime) : Optional<File>
        createAll(catalog : Catalog<BaseRequirement>,  creationTimestamp : LocalDateTime) : Collection<File>
    }

    interface DocumentServiceRepository {
        getSelectionVectorProfiles() : Collection<SelectionVectorProfile>
    }

    interface CatalogService {
        doImport(catalog : Catalog<BaseCatalogRequirement>) : boolean
        doConvert(data : byte[]) : Catalog<BaseRequirement>
        getCatalog(version : String) : Optional<Catalog<BaseRequirement>>
        createCatalog(version : String) : Optional<File>
        createCatalogExcel(version : String) : Optional<File>;
        createDocuments(version : String) : Optional<File>
        getCatalogVersions() : Collection<CatalogVersion>
        limitValidity(version: String, validUntil : ZonedDateTime ) : Optional<CatalogVersion>
        createDocuments(catalog : Catalog<BaseRequirement>) :  Optional<File>
        deleteCatalog(version : String) : boolean
        isCatalogUsed(version : String) : boolean
    }

    interface CatalogServiceRepository {
        createCatalog(catalog : Catalog<BaseRequirement>, validFrom : ZonedDateTime) : Optional<Catalog<BaseRequirement>>
        getCatalog(version : String) : Optional<Catalog<BaseRequirement>>
        existsCatalog( version : String ) : boolean
        getCatalogVersions() : Collection<CatalogVersion>
        limitCatalogValidity(version : String, validUntil : ZonedDateTime) : Optional<CatalogVersion>
        deleteCatalogByVersion( version : String ) : boolean
    }

    class CatalogServiceImpl {
    }
    CatalogService <|-- CatalogServiceImpl
    CatalogServiceImpl --> "1" CatalogServiceRepository : repository
    CatalogServiceImpl --> "1" DocumentService : documentService
    CatalogServiceImpl --> "1" file2Catalog : file2Catalog

    interface "Function<byte[], Catalog<BaseRequirement>>" as file2Catalog {
    }



    interface "Function<Catalog<BaseRequirement>, Collection<Document>>" as applicableDocumentProvider {
    }
    class ApplicableDocumentProvider {
    }
    applicableDocumentProvider <|-- ApplicableDocumentProvider
    ApplicableDocumentProvider --> "1" documentComparator : numberComparator



}


@enduml
