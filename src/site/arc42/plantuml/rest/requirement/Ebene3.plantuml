@startuml Ebene3.png
hide empty members

package eu.tailoringexpert {
    package domain {
        abstract class ResourceMapper
    }
}

package requirement {
    interface RequirementService {
    }

    interface RequirementServiceRepository{
    }

    class RequirementController {
        +getRequirement(project : String , tailoring : String, chapter : String,requirement : String) : ResponseEntity<EntityModel<TailoringRequirementResource>>
        +updateRequirementsState(project : String , tailoring : String, chapter : String, requirement : String, ausgewaehlt : Boolean) : ResponseEntity<EntityModel<TailoringRequirementResource>>
        +updateRequirementText(project : String , tailoring : String, chapter : String, requirement : String, text : String) : ResponseEntity<EntityModel<TailoringRequirementResource>>
        +updateRequirementsState(project : String , phase : String, chapter : String, ausgewaehlt : Boolean) : ResponseEntity<EntityModel<TailoringCatalogChapterResource>>
        +createrRequirement(project : String , tailoring : String, chapter : String, requirement : String, text : String) : ResponseEntity<EntityModel<TailoringRequirementResource>>
    }
    RequirementController --> "1" ResourceMapper : mapper
    RequirementController --> "1" RequirementService : requirementService
    RequirementController --> "1" RequirementServiceRepository : requirementServiceRepository

}
@enduml
