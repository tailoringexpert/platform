@startuml
hide empty members

package de.dlr.rpds.tailoring {
    package domain {
        abstract class ResourceMapper
    }
}

package katalog {

    interface KatalogService {
    }

    interface KatalogRepository {
    }

    interface "Function<String, MediaType>" as mediaTypeProvider {
    }
    class KatalogController {
        +importKatalog(katalog : Katalog<KatalogAnforderung>) : ResponseEntity<Void>
        +getKataloge() : ResponseEntity<CollectionModel<EntityModel<KatalogVersionResource>>>
        +getKatalog(version : String) : ResponseEntity<Katalog<KatalogAnforderung>>
        +deleteKatalog(version : String) : ResponseEntity<Void>
        +getOutputKatalog(version : String) : ResponseEntity<byte[]>
    }


    KatalogController --> "1" ResourceMapper : mapper
    KatalogController --> "1" KatalogService : katalogService
    KatalogController --> "1" KatalogRepository : katalogRepository
    KatalogController --> "1" mediaTypeProvider : mediaTypeProvider
}
@enduml